# =============================================================================
# APPLICATION.PROPERTIES - Main Configuration File
# =============================================================================
# 
# This is Spring Boot's main configuration file.
# Spring Boot automatically loads this file from src/main/resources/
# 
# WHAT IS PROPERTIES FILE:
# - Simple key=value format
# - Used to externalize configuration from code
# - Allows different settings for different environments
# - Spring Boot can read and inject these values using @Value
#
# WHY USE PROPERTIES FILES:
# 1. EXTERNALIZATION: Keep configuration separate from code
# 2. ENVIRONMENT-SPECIFIC: Different values for dev, test, prod
# 3. SECURITY: Keep sensitive data out of source code
# 4. FLEXIBILITY: Change settings without recompiling code
# 5. SPRING BOOT CONVENTION: Standard way to configure Spring Boot apps

# Application name - used by Spring Boot for logging, metrics, etc.
spring.application.name=DemoSpringBootProject

# Custom properties that can be injected into your beans
my.customer.property=Hello From SpringBoot Main Properties File
# Common Spring Boot properties examples:
# Server port (default is 8080)
# server.port=8081

# Database configuration examples:
# spring.datasource.url=jdbc:mysql://localhost:3306/mydb
# spring.datasource.username=root
# spring.datasource.password=secret

# Logging configuration:
# logging.level.com.MyCompany=DEBUG
# logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} - %msg%n

# Profile-specific properties:
spring.profiles.active=Customers

# =============================================================================
# CUSTOMERS.PROPERTIES - Additional Custom Properties File
# =============================================================================
# 
# This file is loaded by @PropertySource("classpath:Customers.properties")
# in MyFirstClass.java
# 
# You can have multiple property files for different purposes:
# - database.properties (database configuration)
# - security.properties (security settings)
# - customers.properties (customer-specific settings)
# - etc.

# Custom properties for customer-related configuration
my.Prop1=Hello From SpringBoot From Customers File (This will override application.properties)
customer.name=John Doe
customer.email=john.doe@example.com
customer.age=30

# Configuration for different customer types
customer.premium.discount=20
customer.standard.discount=10

# External service URLs
external.api.url=https://api.customers.com
external.api.timeout=5000

# Feature flags
feature.new-ui.enabled=true
feature.beta-testing.enabled=false